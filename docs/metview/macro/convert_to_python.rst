.. _macro_to_python:

Convert Macros to Python
==========================

    The Macro to Python converter is available from Metview version 5.20.0

How to use the converter?
--------------------------

There are different ways to perform the conversion. 

Conversion from the icon context menu
++++++++++++++++++++++++++++++++++++++++

In the :ref:`user interface <mv_desktop_overview>` if we right-click on any Macro icon we can use the **Convert to Python** action. 

.. image:: /_static/ui/macro_convert_context_menu.png
   :width: 250px

It will generate a Python script in the same folder where the Macro is located. The name of the Python script is formed by adding the ".py" suffix to the file name or if the Macro name contains the ".mv" suffix it is replaced by ".py". Subsequent calls will always generate a new Python script with an increment added to the file name.

.. image:: /_static/ui/macro_convert_result_1.png
   :width: 250px

The conversion also works for multiple selected Macros:

.. image:: /_static/ui/macro_convert_context_menu_multi.png
   :width: 300px

It the conversion fails for a given Macro its name turns red and the error message will be avialable in the icon Log (you can launch it from the icon context menu):

.. image:: /_static/ui/macro_convert_error_log.png
   :width: 300px

Conversion from the Macro Editor
++++++++++++++++++++++++++++++++++++++++

In the Macro editor we can use the **Convert to Python** action from the File menu in the menubar:

.. image:: /_static/ui/macro_convert_from_editor.png
   :width: 300px

It will generate a Python script in the same folder where the Macro is located. The name of the Python script is generated by adding the ".py" suffix to the file name or if the Macro name contains the ".mv" suffix it is replaced by ".py". Subsequent calls will always generate a new Python script with an increment added to the file name.

On success a popup dialog appears showing the path to the generated Python script. If an error happens the popup will contain the error message as to why the conversion failed.


.. _macro_to_python_adjustments:

How to adjust the results?
-----------------------------------

For most of the Macros you should expect to get a correctly formatted and fully functional Python script. However, the converter cannot handle certain code
structures and data types and it does not have any run-time information, so the generated code may require further **adjustments**. If this happens a set of **warnings** will be added to the top of the Python script. Please check these warnings and **modify your script** accordingly. The following list gives you detailed advice on how to do it:

.. toctree::
   :maxdepth: 1
   
   convert/convert_concat
   convert/convert_date
   convert/convert_plot
   convert/convert_newpage
   convert/convert_vector_slice4

Unsupported features
----------------------

Some features are unsupported in Metview Python and it is not possible to generate a working Python code out of them:

.. toctree::
   :maxdepth: 1
   
   convert/convert_inline

Testing the generated code
-----------------------------

Once the adjustments are done try to run the Python script and see if it generates the same output as your Macro. If it does then congratulations you can start using your nice new Python script. However, if the results differ or the script fails please let the developers know about it by reporting it via the  `ECMWF Support Portal <https://confluence.ecmwf.int/site/support>`_.
   